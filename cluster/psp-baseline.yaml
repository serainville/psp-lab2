apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: baseline
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    #apparmor.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
    #apparmor.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
  privileged: false
  # REquired to prevent escalations to root.
  allowPrivilegeEscalation: false
  # This is redundant with non-root + disallw privilege escalation,
  # but we can provide it for defense in depth
  #requiredDropCapabilities:
  #  - ALL
  # Rendunant when set to an empty list + requiredDropCapabilities set to ALL,
  # but again we can provide it for defense in depth
  allowedCapabilities: []
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    # Assume that persistentVolumes set up by the cluster admin are safe
    #- 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  #readOnlyRootFilesystem: false